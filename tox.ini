# Tox is a generic virtualenv management and test command line tool. Its goal is to
# standardize testing in Python. We will be using it extensively in this course.

# Using Tox we can (on multiple operating systems):
# + Eliminate PYTHONPATH challenges when running scripts/tests
# + Eliminate virtualenv setup confusion
# + Streamline steps such as model training, model publishing

# sempre que temos algo escrito entre colchetes significa que o tox está simulando um
# novo ambiente. Ele cria um novo ambiente na pasta .tox
# podemos rodar comandos em ambientes especificos e também herdar comandos e 
# dependencias de outros ambientes. 



# default tox enviroment
# quando rodamos o ambiente tox, vamos rodar todos os comandos em todos esses diferentes 
# ambientes (test_package, typechecks, stylechecks, lint)
[tox]
envlist = test_package, typechecks, stylechecks, lint
skipsdist = True


# default test enviromento
[testenv]
install_command = pip install {opts} {packages}


#para esse ambiente precisamos instalar as dependencias que estão em test_requirements.txt
# -r sem espaços é a sintaxe do tox
[testenv:test_package]
deps =
	-rrequirements/test_requirements.txt

#definindo algumas variáveis nesse ambiente
setenv =
	PYTHONPATH=.
	PYTHONHASHSEED=0

#definindo os comandos que serão rodados nesse ambiente
# no primeiro ele vai acessar a pasta regression_model e dps rodar o 
# código train_pipeline
# e o segundo é um comando pytest que roda os testes da pasta tests
commands=
	python regression_model/train_pipeline.py
	pytest \
	-s \
	-vv \
	{posargs:tests/}

[testenv:train]
envdir = {toxworkdir}/test_package
deps =
	{[testenv:test_package]deps}

# nessa linha, estamos herdando as variáveis dos ambientes test_package e testenv
setenv =
	{[testenv:test_package]setenv}

commands=
	python regression_model/train_pipeline.py


# checar a tipagem do código
[testenv:typechecks]
envdir = {toxworkdir}/test_package

deps =
	{[testenv:test_package]deps}

commands = {posargs:mypy regression_model}


[testenv:stylechecks]
envdir = {toxworkdir}/test_package

deps =
	{[testenv:test_package]deps}

commands = {posargs:flake8 regression_model tests}


[testenv:lint]
envdir = {toxworkdir}/test_package

deps =
	{[testenv:test_package]deps}

commands =
	isort regression_model tests
	black regression_model tests
	mypy regression_model
	flake8 regression_model

[flake8]
exclude = .git,env
max-line-length = 90